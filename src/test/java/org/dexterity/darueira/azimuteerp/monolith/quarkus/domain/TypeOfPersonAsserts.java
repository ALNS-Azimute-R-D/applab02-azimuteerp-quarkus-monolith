package org.dexterity.darueira.azimuteerp.monolith.quarkus.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TypeOfPersonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeOfPersonAllPropertiesEquals(TypeOfPerson expected, TypeOfPerson actual) {
        assertTypeOfPersonAutoGeneratedPropertiesEquals(expected, actual);
        assertTypeOfPersonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeOfPersonAllUpdatablePropertiesEquals(TypeOfPerson expected, TypeOfPerson actual) {
        assertTypeOfPersonUpdatableFieldsEquals(expected, actual);
        assertTypeOfPersonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeOfPersonAutoGeneratedPropertiesEquals(TypeOfPerson expected, TypeOfPerson actual) {
        assertThat(expected)
            .as("Verify TypeOfPerson auto generated properties")
            .satisfies(e -> assertThat(e.id).as("check id").isEqualTo(actual.id));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeOfPersonUpdatableFieldsEquals(TypeOfPerson expected, TypeOfPerson actual) {
        assertThat(expected)
            .as("Verify TypeOfPerson relevant properties")
            .satisfies(e -> assertThat(e.code).as("check code").isEqualTo(actual.code))
            .satisfies(e -> assertThat(e.description).as("check description").isEqualTo(actual.description));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeOfPersonUpdatableRelationshipsEquals(TypeOfPerson expected, TypeOfPerson actual) {}
}
