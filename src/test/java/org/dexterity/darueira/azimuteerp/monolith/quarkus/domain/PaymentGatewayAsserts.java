package org.dexterity.darueira.azimuteerp.monolith.quarkus.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentGatewayAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentGatewayAllPropertiesEquals(PaymentGateway expected, PaymentGateway actual) {
        assertPaymentGatewayAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentGatewayAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentGatewayAllUpdatablePropertiesEquals(PaymentGateway expected, PaymentGateway actual) {
        assertPaymentGatewayUpdatableFieldsEquals(expected, actual);
        assertPaymentGatewayUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentGatewayAutoGeneratedPropertiesEquals(PaymentGateway expected, PaymentGateway actual) {
        assertThat(expected)
            .as("Verify PaymentGateway auto generated properties")
            .satisfies(e -> assertThat(e.id).as("check id").isEqualTo(actual.id));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentGatewayUpdatableFieldsEquals(PaymentGateway expected, PaymentGateway actual) {
        assertThat(expected)
            .as("Verify PaymentGateway relevant properties")
            .satisfies(e -> assertThat(e.aliasCode).as("check aliasCode").isEqualTo(actual.aliasCode))
            .satisfies(e -> assertThat(e.description).as("check description").isEqualTo(actual.description))
            .satisfies(e -> assertThat(e.businessHandlerClazz).as("check businessHandlerClazz").isEqualTo(actual.businessHandlerClazz))
            .satisfies(e -> assertThat(e.activationStatus).as("check activationStatus").isEqualTo(actual.activationStatus));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentGatewayUpdatableRelationshipsEquals(PaymentGateway expected, PaymentGateway actual) {}
}
